export const recordMesgs = {
  fields: {
    253: {
      num: 253,
      name: "timestamp",
      type: "dateTime",
      array: "false",
      scale: 1,
      offset: 0,
      units: "s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    0: {
      num: 0,
      name: "positionLat",
      type: "sint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "semicircles",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    1: {
      num: 1,
      name: "positionLong",
      type: "sint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "semicircles",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    2: {
      num: 2,
      name: "altitude",
      type: "uint16",
      array: "false",
      scale: [5],
      offset: [500],
      units: ["m"],
      bits: [16],
      components: ["78"],
      isAccumulated: false,
      hasComponents: true,
      subFields: [],
    },
    3: {
      num: 3,
      name: "heartRate",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "bpm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    4: {
      num: 4,
      name: "cadence",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "rpm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    5: {
      num: 5,
      name: "distance",
      type: "uint32",
      array: "false",
      scale: 100,
      offset: 0,
      units: "m",
      bits: [],
      components: [],
      isAccumulated: true,
      hasComponents: false,
      subFields: [],
    },
    6: {
      num: 6,
      name: "speed",
      type: "uint16",
      array: "false",
      scale: [1000],
      offset: [0],
      units: ["m/s"],
      bits: [16],
      components: ["73"],
      isAccumulated: false,
      hasComponents: true,
      subFields: [],
    },
    7: {
      num: 7,
      name: "power",
      type: "uint16",
      array: "false",
      scale: 1,
      offset: 0,
      units: "watts",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    8: {
      num: 8,
      name: "compressedSpeedDistance",
      type: "byte",
      array: "true",
      scale: [100, 16],
      offset: [0, 0],
      units: ["m/s", "m"],
      bits: [12, 12],
      components: ["6", "5"],
      isAccumulated: false,
      hasComponents: true,
      subFields: [],
    },
    9: {
      num: 9,
      name: "grade",
      type: "sint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "%",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    10: {
      num: 10, // Relative. 0 is none 254 is Max.
      name: "resistance",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    11: {
      num: 11,
      name: "timeFromCourse",
      type: "sint32",
      array: "false",
      scale: 1000,
      offset: 0,
      units: "s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    12: {
      num: 12,
      name: "cycleLength",
      type: "uint8",
      array: "false",
      scale: 100,
      offset: 0,
      units: "m",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    13: {
      num: 13,
      name: "temperature",
      type: "sint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "C",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    17: {
      num: 17, // Speed at 1s intervals. Timestamp field indicates time of last array element.
      name: "speed1s",
      type: "uint8",
      array: "true",
      scale: 16,
      offset: 0,
      units: "m/s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    18: {
      num: 18,
      name: "cycles",
      type: "uint8",
      array: "false",
      scale: [1],
      offset: [0],
      units: ["cycles"],
      bits: [8],
      components: ["19"],
      isAccumulated: false,
      hasComponents: true,
      subFields: [],
    },
    19: {
      num: 19,
      name: "totalCycles",
      type: "uint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "cycles",
      bits: [],
      components: [],
      isAccumulated: true,
      hasComponents: false,
      subFields: [],
    },
    28: {
      num: 28,
      name: "compressedAccumulatedPower",
      type: "uint16",
      array: "false",
      scale: [1],
      offset: [0],
      units: ["watts"],
      bits: [16],
      components: ["29"],
      isAccumulated: false,
      hasComponents: true,
      subFields: [],
    },
    29: {
      num: 29,
      name: "accumulatedPower",
      type: "uint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "watts",
      bits: [],
      components: [],
      isAccumulated: true,
      hasComponents: false,
      subFields: [],
    },
    30: {
      num: 30,
      name: "leftRightBalance",
      type: "leftRightBalance",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    31: {
      num: 31,
      name: "gpsAccuracy",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "m",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    32: {
      num: 32,
      name: "verticalSpeed",
      type: "sint16",
      array: "false",
      scale: 1000,
      offset: 0,
      units: "m/s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    33: {
      num: 33,
      name: "calories",
      type: "uint16",
      array: "false",
      scale: 1,
      offset: 0,
      units: "kcal",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    39: {
      num: 39,
      name: "verticalOscillation",
      type: "uint16",
      array: "false",
      scale: 10,
      offset: 0,
      units: "mm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    40: {
      num: 40,
      name: "stanceTimePercent",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    41: {
      num: 41,
      name: "stanceTime",
      type: "uint16",
      array: "false",
      scale: 10,
      offset: 0,
      units: "ms",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    42: {
      num: 42,
      name: "activityType",
      type: "activityType",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    43: {
      num: 43,
      name: "leftTorqueEffectiveness",
      type: "uint8",
      array: "false",
      scale: 2,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    44: {
      num: 44,
      name: "rightTorqueEffectiveness",
      type: "uint8",
      array: "false",
      scale: 2,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    45: {
      num: 45,
      name: "leftPedalSmoothness",
      type: "uint8",
      array: "false",
      scale: 2,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    46: {
      num: 46,
      name: "rightPedalSmoothness",
      type: "uint8",
      array: "false",
      scale: 2,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    47: {
      num: 47,
      name: "combinedPedalSmoothness",
      type: "uint8",
      array: "false",
      scale: 2,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    48: {
      num: 48,
      name: "time128",
      type: "uint8",
      array: "false",
      scale: 128,
      offset: 0,
      units: "s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    49: {
      num: 49,
      name: "strokeType",
      type: "strokeType",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    50: {
      num: 50,
      name: "zone",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    51: {
      num: 51,
      name: "ballSpeed",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "m/s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    52: {
      num: 52, // Log cadence and fractional cadence for backwards compatability
      name: "cadence256",
      type: "uint16",
      array: "false",
      scale: 256,
      offset: 0,
      units: "rpm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    53: {
      num: 53,
      name: "fractionalCadence",
      type: "uint8",
      array: "false",
      scale: 128,
      offset: 0,
      units: "rpm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    54: {
      num: 54, // Total saturated and unsaturated hemoglobin
      name: "totalHemoglobinConc",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "g/dL",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    55: {
      num: 55, // Min saturated and unsaturated hemoglobin
      name: "totalHemoglobinConcMin",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "g/dL",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    56: {
      num: 56, // Max saturated and unsaturated hemoglobin
      name: "totalHemoglobinConcMax",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "g/dL",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    57: {
      num: 57, // Percentage of hemoglobin saturated with oxygen
      name: "saturatedHemoglobinPercent",
      type: "uint16",
      array: "false",
      scale: 10,
      offset: 0,
      units: "%",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    58: {
      num: 58, // Min percentage of hemoglobin saturated with oxygen
      name: "saturatedHemoglobinPercentMin",
      type: "uint16",
      array: "false",
      scale: 10,
      offset: 0,
      units: "%",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    59: {
      num: 59, // Max percentage of hemoglobin saturated with oxygen
      name: "saturatedHemoglobinPercentMax",
      type: "uint16",
      array: "false",
      scale: 10,
      offset: 0,
      units: "%",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    62: {
      num: 62,
      name: "deviceIndex",
      type: "deviceIndex",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    67: {
      num: 67, // Left platform center offset
      name: "leftPco",
      type: "sint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "mm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    68: {
      num: 68, // Right platform center offset
      name: "rightPco",
      type: "sint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "mm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    69: {
      num: 69, // Left power phase angles. Data value indexes defined by power_phase_type.
      name: "leftPowerPhase",
      type: "uint8",
      array: "true",
      scale: 0.7111111,
      offset: 0,
      units: "degrees",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    70: {
      num: 70, // Left power phase peak angles. Data value indexes defined by power_phase_type.
      name: "leftPowerPhasePeak",
      type: "uint8",
      array: "true",
      scale: 0.7111111,
      offset: 0,
      units: "degrees",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    71: {
      num: 71, // Right power phase angles. Data value indexes defined by power_phase_type.
      name: "rightPowerPhase",
      type: "uint8",
      array: "true",
      scale: 0.7111111,
      offset: 0,
      units: "degrees",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    72: {
      num: 72, // Right power phase peak angles. Data value indexes defined by power_phase_type.
      name: "rightPowerPhasePeak",
      type: "uint8",
      array: "true",
      scale: 0.7111111,
      offset: 0,
      units: "degrees",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    73: {
      num: 73,
      name: "enhancedSpeed",
      type: "uint32",
      array: "false",
      scale: 1000,
      offset: 0,
      units: "m/s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    78: {
      num: 78,
      name: "enhancedAltitude",
      type: "uint32",
      array: "false",
      scale: 5,
      offset: 500,
      units: "m",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    81: {
      num: 81, // lev battery state of charge
      name: "batterySoc",
      type: "uint8",
      array: "false",
      scale: 2,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    82: {
      num: 82, // lev motor power
      name: "motorPower",
      type: "uint16",
      array: "false",
      scale: 1,
      offset: 0,
      units: "watts",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    83: {
      num: 83,
      name: "verticalRatio",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    84: {
      num: 84,
      name: "stanceTimeBalance",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    85: {
      num: 85,
      name: "stepLength",
      type: "uint16",
      array: "false",
      scale: 10,
      offset: 0,
      units: "mm",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    87: {
      num: 87, // Supports larger cycle sizes needed for paddlesports. Max cycle size: 655.35
      name: "cycleLength16",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "m",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    91: {
      num: 91, // Includes atmospheric pressure
      name: "absolutePressure",
      type: "uint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "Pa",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    92: {
      num: 92, // 0 if above water
      name: "depth",
      type: "uint32",
      array: "false",
      scale: 1000,
      offset: 0,
      units: "m",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    93: {
      num: 93, // 0 if above water
      name: "nextStopDepth",
      type: "uint32",
      array: "false",
      scale: 1000,
      offset: 0,
      units: "m",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    94: {
      num: 94,
      name: "nextStopTime",
      type: "uint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    95: {
      num: 95,
      name: "timeToSurface",
      type: "uint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    96: {
      num: 96,
      name: "ndlTime",
      type: "uint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    97: {
      num: 97,
      name: "cnsLoad",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    98: {
      num: 98,
      name: "n2Load",
      type: "uint16",
      array: "false",
      scale: 1,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    99: {
      num: 99,
      name: "respirationRate",
      type: "uint8",
      array: "false",
      scale: [1],
      offset: [0],
      units: ["s"],
      bits: [8],
      components: ["108"],
      isAccumulated: false,
      hasComponents: true,
      subFields: [],
    },
    108: {
      num: 108,
      name: "enhancedRespirationRate",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "Breaths/min",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    114: {
      num: 114, // The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.
      name: "grit",
      type: "float32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    115: {
      num: 115, // The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.
      name: "flow",
      type: "float32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    116: {
      num: 116, // Current Stress value
      name: "currentStress",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    117: {
      num: 117,
      name: "ebikeTravelRange",
      type: "uint16",
      array: "false",
      scale: 1,
      offset: 0,
      units: "km",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    118: {
      num: 118,
      name: "ebikeBatteryLevel",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    119: {
      num: 119,
      name: "ebikeAssistMode",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "depends on sensor",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    120: {
      num: 120,
      name: "ebikeAssistLevelPercent",
      type: "uint8",
      array: "false",
      scale: 1,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    123: {
      num: 123,
      name: "airTimeRemaining",
      type: "uint32",
      array: "false",
      scale: 1,
      offset: 0,
      units: "s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    124: {
      num: 124, // Pressure-based surface air consumption
      name: "pressureSac",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "bar/min",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    125: {
      num: 125, // Volumetric surface air consumption
      name: "volumeSac",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "L/min",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    126: {
      num: 126, // Respiratory minute volume
      name: "rmv",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "L/min",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    127: {
      num: 127,
      name: "ascentRate",
      type: "sint32",
      array: "false",
      scale: 1000,
      offset: 0,
      units: "m/s",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    129: {
      num: 129, // Current partial pressure of oxygen
      name: "po2",
      type: "uint8",
      array: "false",
      scale: 100,
      offset: 0,
      units: "percent",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
    139: {
      num: 139,
      name: "coreTemperature",
      type: "uint16",
      array: "false",
      scale: 100,
      offset: 0,
      units: "C",
      bits: [],
      components: [],
      isAccumulated: false,
      hasComponents: false,
      subFields: [],
    },
  },
};
